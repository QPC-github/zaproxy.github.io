<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OWASP_2021_A03 on OWASP ZAP</title>
    <link>/alerttags/owasp_2021_a03/</link>
    <description>Recent content in OWASP_2021_A03 on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Nov 2021 12:22:14 +0000</lastBuildDate><atom:link href="/alerttags/owasp_2021_a03/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buffer Overflow</title>
      <link>/docs/alerts/30001/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/30001/</guid>
      <description>Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way.</description>
    </item>
    
    <item>
      <title>Cookie Poisoning</title>
      <link>/docs/alerts/10029/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/10029/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where cookie parameters might be controlled. This is called a cookie poisoning attack, and becomes exploitable when an attacker can manipulate the cookie in various ways. In some cases this will not be exploitable, however, allowing URL parameters to set cookie values is generally considered a bug.</description>
    </item>
    
    <item>
      <title>CRLF Injection</title>
      <link>/docs/alerts/40003/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/40003/</guid>
      <description>Cookie can be set via CRLF injection. It may also be possible to set arbitrary HTTP response headers. In addition, by carefully crafting the injected response using cross-site script, cache poisoning vulnerability may also exist.</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (DOM Based)</title>
      <link>/docs/alerts/40026/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/40026/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (Persistent)</title>
      <link>/docs/alerts/40014/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/40014/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (Reflected)</title>
      <link>/docs/alerts/40012/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/40012/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>External Redirect</title>
      <link>/docs/alerts/20019/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/20019/</guid>
      <description>URL redirectors represent common functionality employed by web sites to forward an incoming request to an alternate resource. This can be done for a variety of reasons and is often done to allow resources to be moved within the directory structure and to avoid breaking functionality for users that request the resource at its previous location.</description>
    </item>
    
    <item>
      <title>Format String Error</title>
      <link>/docs/alerts/30002/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/30002/</guid>
      <description>A Format String error occurs when the submitted data of an input string is evaluated as a command by the application.</description>
    </item>
    
    <item>
      <title>Open Redirect</title>
      <link>/docs/alerts/10028/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/10028/</guid>
      <description>Open redirects are one of the OWASP 2010 Top Ten vulnerabilities. This check looks at user-supplied input in query string parameters and POST data to identify where open redirects might be possible. Open redirects occur when an application allows user-supplied input (e.g. http://nottrusted.com) to control an offsite redirect. This is generally a pretty accurate way to find where 301 or 302 redirects could be exploited by spammers or phishing attacks.</description>
    </item>
    
    <item>
      <title>Remote File Inclusion</title>
      <link>/docs/alerts/7/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/7/</guid>
      <description>Remote File Include (RFI) is an attack technique used to exploit &amp;ldquo;dynamic file include&amp;rdquo; mechanisms in web applications. When web applications take user input (URL, parameter value, etc.) and pass them into file include commands, the web application might be tricked into including remote files with malicious code.</description>
    </item>
    
    <item>
      <title>Remote OS Command Injection</title>
      <link>/docs/alerts/90020/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/90020/</guid>
      <description>Attack technique used for unauthorized execution of operating system commands. This attack is possible when an application accepts untrusted input to build operating system commands in an insecure manner involving improper data sanitization, and/or improper calling of external programs.</description>
    </item>
    
    <item>
      <title>Server Side Code Injection</title>
      <link>/docs/alerts/90019/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/90019/</guid>
      <description>A code injection may be possible including custom code that will be evaluated by the scripting engine</description>
    </item>
    
    <item>
      <title>Server Side Include</title>
      <link>/docs/alerts/40009/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/40009/</guid>
      <description>Certain parameters may cause Server Side Include commands to be executed. This may allow database connection or arbitrary code to be executed.</description>
    </item>
    
    <item>
      <title>SOAP Action Spoofing</title>
      <link>/docs/alerts/90026/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/90026/</guid>
      <description>An unintended SOAP operation was executed by the server.</description>
    </item>
    
    <item>
      <title>SOAP XML Injection</title>
      <link>/docs/alerts/90029/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/90029/</guid>
      <description>Some XML injected code has been interpreted by the server.</description>
    </item>
    
    <item>
      <title>SQL Injection</title>
      <link>/docs/alerts/40018/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/40018/</guid>
      <description>SQL injection may be possible.</description>
    </item>
    
    <item>
      <title>User Controllable Charset</title>
      <link>/docs/alerts/10030/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/10030/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where Content-Type or meta tag charset declarations might be user-controlled. Such charset declarations should always be declared by the application. If an attacker can control the response charset, they could manipulate the HTML to perform XSS or other attacks.</description>
    </item>
    
    <item>
      <title>User Controllable HTML Element Attribute (Potential XSS)</title>
      <link>/docs/alerts/10031/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/10031/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.</description>
    </item>
    
    <item>
      <title>User Controllable JavaScript Event (XSS)</title>
      <link>/docs/alerts/10043/</link>
      <pubDate>Tue, 30 Nov 2021 12:22:14 +0000</pubDate>
      
      <guid>/docs/alerts/10043/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.</description>
    </item>
    
    <item>
      <title>Advanced SQL Injection</title>
      <link>/docs/alerts/90018/</link>
      <pubDate>Thu, 14 Oct 2021 08:21:59 +0000</pubDate>
      
      <guid>/docs/alerts/90018/</guid>
      <description>A SQL injection may be possible using the attached payload</description>
    </item>
    
  </channel>
</rss>
